/* Creating table for class AdvisHistory */

CREATE TABLE ADVISHISTORY(
  USER_ID VARCHAR(20),
  TERMINAL_ID VARCHAR(15),
  PRINT_DATE DATETIME,
  ADVISHISTORY_ID INTEGER NOT NULL,
  ID_TRANSAKSI INTEGER,
PRIMARY KEY (ADVISHISTORY_ID)
);

/* Creating table for class AhliWaris */

CREATE TABLE AHLIWARIS(
  NOMOR_URUT_PRIORITAS INTEGER,
  NAMA_LENGKAP VARCHAR(30),
  TANGGAL_LAHIR DATETIME,
  JENIS_KELAMIN VARCHAR(1),
  STATUS_AHLI_WARIS VARCHAR(1),
  KETERANGAN VARCHAR(100),
  AHLIWARIS_ID INTEGER NOT NULL,
  HUBUNGAN_KELUARGA VARCHAR(1),
  NO_PESERTA VARCHAR(11),
PRIMARY KEY (AHLIWARIS_ID)
);

/* Creating table for class BagiHasil */

CREATE TABLE BAGIHASIL(
  idbghasil INTEGER NOT NULL,
  kode_paket_investasi VARCHAR(2),
  tgl_bagi_hasil DATETIME,
  keuntungan_dibagikan DOUBLE PRECISION,
  indeks DOUBLE PRECISION,
  status_posting VARCHAR(1),
PRIMARY KEY (idbghasil)
);

/* Creating table for class BayarPremi */

CREATE TABLE BAYARPREMI(
  ID_Transaksi INTEGER NOT NULL,
  catatan_bayar_premi VARCHAR(30),
  id_trans_sales INTEGER,
  SALDO_IURAN_PK DOUBLE PRECISION,
  SALDO_IURAN_PST DOUBLE PRECISION,
  SALDO_PENGEMBANGAN DOUBLE PRECISION,
  SALDO_PERALIHAN DOUBLE PRECISION,
  SALDO_JML_DANA DOUBLE PRECISION,
  BIAYA_PENCAIRAN DOUBLE PRECISION,
  SALDO_MANFAAT DOUBLE PRECISION,
  PAJAK DOUBLE PRECISION,
  MANFAAT_STLH_PAJAK DOUBLE PRECISION,
  MANFAAT_TUNAI DOUBLE PRECISION,
  MANFAAT_ANUITAS DOUBLE PRECISION,
  BIAYA_LAIN DOUBLE PRECISION,
  MANFAAT_TUNAI_DITERIMA DOUBLE PRECISION,
  NAMA_ANUITAS VARCHAR(10),
PRIMARY KEY (ID_Transaksi)
);

/* Creating table for class BiayaAdmTahunan */

CREATE TABLE TRANSAKSIDPLK(
  ID_Transaksi INTEGER NOT NULL,
PRIMARY KEY (ID_Transaksi)
);

/* Creating table for class BiayaAdmTransaksi */

CREATE TABLE TRANSAKSIDPLK(
  ID_TRANSAKSI INTEGER NOT NULL,
PRIMARY KEY (ID_TRANSAKSI)
);

/* Creating table for class BiayaPengelolaanDana */

CREATE TABLE TRANSAKSIDPLK(
  ID_Transaksi INTEGER NOT NULL,
  saldo_yang_dibebani DOUBLE PRECISION,
PRIMARY KEY (ID_Transaksi)
);

/* Creating table for class blobregistration */

CREATE TABLE BLOBREGISTRATION(
  ID INTEGER NOT NULL,
  ACTUALFILENAME VARCHAR(128),
  ISTEMPORARY VARCHAR(1),
PRIMARY KEY (ID)
);

/* Creating table for class BranchLocation */

CREATE TABLE BRANCHLOCATION(
  branch_code VARCHAR(5) NOT NULL,
  BranchName VARCHAR(50),
  BranchStatus VARCHAR(1),
  user_id VARCHAR(20),
  last_update DATETIME,
  masterbranch_code VARCHAR(5),
PRIMARY KEY (branch_code)
);

/* Creating table for class counter */

CREATE TABLE COUNTER(
  ID_CODE VARCHAR(50) NOT NULL,
  LAST_ID INTEGER,
  IS_LOCKED INTEGER,
  PARAM VARCHAR(50) NOT NULL,
PRIMARY KEY (ID_CODE, PARAM)
);

/* Creating table for class DaerahAsal */

CREATE TABLE DAERAHASAL(
  kode_propinsi VARCHAR(8) NOT NULL,
  nama_propinsi VARCHAR(30),
  USER_ID VARCHAR(20),
  LAST_UPDATE DATETIME,
PRIMARY KEY (kode_propinsi)
);

/* Creating table for class enum_int */

CREATE TABLE ENUM_INT(
  enum_name VARCHAR(32) NOT NULL,
  enum_value INTEGER NOT NULL,
  enum_description VARCHAR(50),
PRIMARY KEY (enum_name, enum_value)
);

/* Creating table for class enum_varchar */

CREATE TABLE ENUM_VARCHAR(
  enum_name VARCHAR(32) NOT NULL,
  enum_value VARCHAR(2) NOT NULL,
  enum_description VARCHAR(50),
PRIMARY KEY (enum_name, enum_value)
);

/* Creating table for class GeneralClass */

CREATE TABLE GENERALCLASS(
  ID INTEGER NOT NULL,
PRIMARY KEY (ID)
);

/* Creating table for class GLInterface */

CREATE TABLE GLINTERFACE(
  intf_code VARCHAR(10) NOT NULL,
  description VARCHAR(40),
  kode INTEGER,
  ACCOUNT_CODE VARCHAR(30),
  LAST_UPDATE DATETIME,
  USER_ID VARCHAR(20),
PRIMARY KEY (intf_code)
);

/* Creating table for class HistJenisInvestasi */

CREATE TABLE HISTJENISINVESTASI(
  no_urut_hist_inv INTEGER NOT NULL,
  no_peserta VARCHAR(11),
  tgl_perubahan DATETIME,
  kode_paket_investasi VARCHAR(2),
  NO_REFERENSI VARCHAR(20),
  TERMINAL_ID VARCHAR(15),
PRIMARY KEY (no_urut_hist_inv)
);

/* Creating table for class HistoriAhliWaris */

CREATE TABLE HISTORIAHLIWARIS(
  HISTORIAHLIWARIS_ID INTEGER NOT NULL,
  USER_ID VARCHAR(20),
  AUTH_USER_ID VARCHAR(20),
  TANGGAL_HISTORI DATETIME,
  NO_REFERENSI VARCHAR(20),
  KETERANGAN VARCHAR(100),
  TERMINAL_ID VARCHAR(15),
  NO_PESERTA VARCHAR(11),
PRIMARY KEY (HISTORIAHLIWARIS_ID)
);

/* Creating table for class HistoriAhliWarisDetail */

CREATE TABLE HISTORIAHLIWARISDETAIL(
  HISTORIAWD_ID INTEGER NOT NULL,
  NOMOR_URUT_PRIORITAS INTEGER,
  NAMA_LENGKAP VARCHAR(30),
  TANGGAL_LAHIR DATETIME,
  JENIS_KELAMIN VARCHAR(1),
  STATUS_AHLI_WARIS VARCHAR(1),
  KETERANGAN VARCHAR(100),
  HUBUNGAN_KELUARGA VARCHAR(1),
  HISTORIAHLIWARIS_ID INTEGER,
PRIMARY KEY (HISTORIAWD_ID)
);

/* Creating table for class HistoriAnuitas */

CREATE TABLE HISTORIANUITAS(
  HISTORIANUITAS_ID INTEGER NOT NULL,
  USER_ID VARCHAR(20),
  AUTH_USER_ID VARCHAR(20),
  TANGGAL_HISTORI DATETIME,
  NO_REFERENSI VARCHAR(20),
  TERMINAL_ID VARCHAR(15),
  TGL_PEMBELIAN_ANUITAS DATETIME,
  NAMA_ASURANSI VARCHAR(20),
  NO_POLIS_ANUITAS VARCHAR(20),
  NO_PESERTA VARCHAR(11),
PRIMARY KEY (HISTORIANUITAS_ID)
);

/* Creating table for class HistoriAutoDebet */

CREATE TABLE HISTORIAUTODEBET(
  HISTORIAUTODEBET_ID INTEGER NOT NULL,
  NO_REKENING VARCHAR(20),
  USER_ID VARCHAR(20),
  AUTH_USER_ID VARCHAR(20),
  TANGGAL_HISTORI DATETIME,
  NAMA_REKENING VARCHAR(50),
  TANGGAL_AUTODEBET INTEGER,
  NO_REFERENSI VARCHAR(15),
  TERMINAL_ID VARCHAR(15),
  NO_PESERTA VARCHAR(11),
PRIMARY KEY (HISTORIAUTODEBET_ID)
);

/* Creating table for class HistoriIuran */

CREATE TABLE HISTORIIURAN(
  HISTORIIURAN_ID INTEGER NOT NULL,
  USER_ID VARCHAR(20),
  AUTH_USER_ID VARCHAR(20),
  TANGGAL_HISTORI DATETIME,
  IURAN_PST DOUBLE PRECISION,
  IURAN_PK DOUBLE PRECISION,
  NO_REFERENSI VARCHAR(20),
  TERMINAL_ID VARCHAR(15),
  NO_PESERTA VARCHAR(11),
PRIMARY KEY (HISTORIIURAN_ID)
);

/* Creating table for class HistoriPindahPaketInvestasi */

CREATE TABLE HISTORIPINDAHPAKETINVESTASI(
  USER_ID VARCHAR(20),
  AUTH_USER_ID VARCHAR(20),
  TANGGAL_HISTORI DATETIME,
  HISTORIPPI_ID INTEGER NOT NULL,
  NO_REFERENSI VARCHAR(20),
  TERMINAL_ID VARCHAR(15),
  KODE_PAKET_INVESTASI VARCHAR(2),
  NO_PESERTA VARCHAR(11),
PRIMARY KEY (HISTORIPPI_ID)
);

/* Creating table for class HistoriSRR */

CREATE TABLE HISTORISRR(
  SRR DOUBLE PRECISION,
  SALDO_AKHIR_SRR DOUBLE PRECISION,
  ID_HISTORISRR INTEGER NOT NULL,
  NO_PESERTA VARCHAR(11),
  ID_SRRCALC INTEGER,
PRIMARY KEY (ID_HISTORISRR)
);

/* Creating table for class HistoriUbahAlamat */

CREATE TABLE HISTORIUBAHALAMAT(
  alamat_jalan VARCHAR(60),
  alamat_rtrw VARCHAR(7),
  alamat_kelurahan VARCHAR(50),
  ALAMAT_KECAMATAN VARCHAR(50),
  alamat_kota VARCHAR(15),
  alamat_kode_pos VARCHAR(6),
  alamat_telepon VARCHAR(12),
  alamat_kantor_jalan VARCHAR(30),
  alamat_kantor_kode_pos VARCHAR(30),
  ALAMAT_KANTOR_KELURAHAN VARCHAR(50),
  ALAMAT_KANTOR_KECAMATAN VARCHAR(50),
  alamat_kantor_kota VARCHAR(30),
  alamat_kantor_propinsi VARCHAR(30),
  alamat_kantor_telepon VARCHAR(30),
  ALAMAT_SURAT_JALAN VARCHAR(60),
  ALAMAT_SURAT_KELURAHAN VARCHAR(50),
  ALAMAT_SURAT_KECAMATAN VARCHAR(50),
  ALAMAT_SURAT_RTRW VARCHAR(7),
  ALAMAT_SURAT_KOTA VARCHAR(30),
  ALAMAT_SURAT_PROPINSI VARCHAR(30),
  ALAMAT_SURAT_KODE_POS VARCHAR(5),
  HISTORIUA_ID INTEGER NOT NULL,
  USER_ID VARCHAR(20),
  AUTH_USER_ID VARCHAR(20),
  TANGGAL_HISTORI DATETIME,
  KIRIM_STATEMEN VARCHAR(1),
  KETERANGAN VARCHAR(100),
  NO_REFERENSI VARCHAR(20),
  TERMINAL_ID VARCHAR(15),
  NO_PESERTA VARCHAR(11),
PRIMARY KEY (HISTORIUA_ID)
);

/* Creating table for class HistoriUbahStatusKerja */

CREATE TABLE HISTORIUBAHSTATUSKERJA(
  HISTORIUBAHSTATUSKERJA_ID INTEGER NOT NULL,
  USER_ID VARCHAR(20),
  AUTH_USER_ID VARCHAR(20),
  NO_REFERENSI VARCHAR(20),
  KETERANGAN VARCHAR(100),
  TERMINAL_ID VARCHAR(15),
  TANGGAL_HISTORI DATETIME,
  LAST_UPDATE DATETIME,
  JENIS_TRANSAKSI VARCHAR(1),
  NO_PESERTA VARCHAR(11),
  KODE_NASABAH_CORPORATE VARCHAR(11),
PRIMARY KEY (HISTORIUBAHSTATUSKERJA_ID)
);

/* Creating table for class HistoriWasiatUmmat */

CREATE TABLE HISTORIWASIATUMMAT(
  HISTORIWU_ID INTEGER NOT NULL,
  NO_POLIS VARCHAR(20),
  BESAR_PREMI DOUBLE PRECISION,
  TGL_AKSEPTASI DATETIME,
  TGL_BERAKHIR DATETIME,
  ALASAN_BERHENTI VARCHAR(100),
  KETERANGAN VARCHAR(100),
  USER_ID VARCHAR(20),
  AUTH_USER_ID VARCHAR(20),
  TANGGAL_HISTORI DATETIME,
  NO_REFERENSI VARCHAR(20),
  TERMINAL_ID VARCHAR(15),
  NO_PESERTA VARCHAR(11),
PRIMARY KEY (HISTORIWU_ID)
);

/* Creating table for class id_gen */

CREATE TABLE ID_GEN(
  id_code VARCHAR(50) NOT NULL,
  last_id INTEGER,
  locked VARCHAR(1),
PRIMARY KEY (id_code)
);

/* Creating table for class Investasi */

CREATE TABLE INVESTASI(
  ID_INVESTASI INTEGER NOT NULL,
  NO_BILYET VARCHAR(15),
  AKUM_NOMINAL DOUBLE PRECISION,
  AKUM_PIUTANGLR DOUBLE PRECISION,
  AKUM_LR DOUBLE PRECISION,
  STATUS VARCHAR(1),
  TGL_BUKA DATETIME,
  TGL_TUTUP DATETIME,
  ROLLOVER_COUNTER INTEGER,
  USER_ID VARCHAR(20),
  LAST_UPDATE DATETIME,
  TERMINAL_ID VARCHAR(15),
  USER_ID_AUTH VARCHAR(20),
  TERMINAL_ID_AUTH VARCHAR(15),
  TGL_OTORISASI DATETIME,
  NOMINAL_PEMBUKAAN DOUBLE PRECISION,
  KODE_PIHAK_KETIGA VARCHAR(8),
  KODE_PAKET_INVESTASI VARCHAR(2),
  KODE_JNS_INVESTASI VARCHAR(3),
PRIMARY KEY (ID_INVESTASI)
);

/* Creating table for class IuranPendaftaran */

CREATE TABLE IURANPENDAFTARAN(
  ID_TRANSAKSI INTEGER NOT NULL,
  USER_ID VARCHAR(20),
  USER_ID_AUTH VARCHAR(20),
  TGL_TRANSAKSI DATETIME,
  TGL_SISTEM DATETIME,
  TGL_OTORISASI DATETIME,
  TERMINAL_ID VARCHAR(15),
  TERMINAL_ID_AUTH VARCHAR(15),
  KETERANGAN VARCHAR(100),
  ISCOMMITTED VARCHAR(1),
  BRANCH_CODE VARCHAR(5),
  BESAR_BIAYA_DAFTAR DOUBLE PRECISION,
  NO_PESERTA VARCHAR(11),
  ID_TRANSACTIONBATCH INTEGER,
PRIMARY KEY (ID_TRANSAKSI)
);

/* Creating table for class IuranPeserta */

CREATE TABLE TRANSAKSIDPLK(
  ID_Transaksi INTEGER NOT NULL,
  catatan_bayar_iuran VARCHAR(30),
  id_trans_sales INTEGER,
  TITIPAN_PREMI DOUBLE PRECISION,
  ID_BATCHPREMI INTEGER,
PRIMARY KEY (ID_Transaksi)
);

/* Creating table for class JenisInvestasi */

CREATE TABLE JENISINVESTASI(
  KODE_JNS_INVESTASI VARCHAR(3) NOT NULL,
  NAMA_JNS_INVESTASI VARCHAR(20),
  expected_rate DOUBLE PRECISION,
  acc_investasi VARCHAR(20),
  acc_pendapatan VARCHAR(20),
  acc_biayainvest VARCHAR(20),
  acc_piutangpendapatan VARCHAR(20),
  acc_potensi_profit VARCHAR(20),
  USER_ID VARCHAR(20),
  LAST_UPDATE DATETIME,
PRIMARY KEY (KODE_JNS_INVESTASI)
);

/* Creating table for class JenisPenerimaanManfaat */

CREATE TABLE JENISPENERIMAANMANFAAT(
  kode_jns_manfaat VARCHAR(1) NOT NULL,
  nama_jns_manfaat VARCHAR(30),
  LAST_UPDATE DATETIME,
  USER_ID VARCHAR(20),
PRIMARY KEY (kode_jns_manfaat)
);

/* Creating table for class JenisRegisterCIF */

CREATE TABLE JENISREGISTERCIF(
  KODE_JENIS_REGISTERCIF VARCHAR(1) NOT NULL,
  NAMA_JENIS_REGISTERCIF VARCHAR(30),
  USER_ID VARCHAR(20),
  LAST_UPDATE DATETIME,
PRIMARY KEY (KODE_JENIS_REGISTERCIF)
);

/* Creating table for class JenisTransaksiDPLK */

CREATE TABLE JENISTRANSAKSIDPLK(
  kode_jenis_transaksi VARCHAR(1) NOT NULL,
  nama_transaksi VARCHAR(30),
  BACKDATE_DAYS INTEGER,
  LAST_UPDATE DATETIME,
  USER_ID VARCHAR(20),
PRIMARY KEY (kode_jenis_transaksi)
);

/* Creating table for class JenisUsaha */

CREATE TABLE JENISUSAHA(
  kode_jenis_usaha VARCHAR(5) NOT NULL,
  nama_jenis_usaha VARCHAR(30),
  USER_ID VARCHAR(20),
  LAST_UPDATE DATETIME,
PRIMARY KEY (kode_jenis_usaha)
);

/* Creating table for class JnsTransInvestasi */

CREATE TABLE JNSTRANSINVESTASI(
  KODE_JENIS_TRINVESTASI VARCHAR(1) NOT NULL,
  DESKRIPSI VARCHAR(100),
  USER_ID VARCHAR(20),
  LAST_UPDATE DATETIME,
PRIMARY KEY (KODE_JENIS_TRINVESTASI)
);

/* Creating table for class Kelompok */

CREATE TABLE KELOMPOK(
  KODE_KELOMPOK VARCHAR(20) NOT NULL,
  NAMA_KELOMPOK VARCHAR(50),
  KETERANGAN VARCHAR(100),
  USER_ID VARCHAR(20),
  LAST_UPDATE DATETIME,
PRIMARY KEY (KODE_KELOMPOK)
);

/* Creating table for class Kepemilikan */

CREATE TABLE KEPEMILIKAN(
  kode_pemilikan VARCHAR(2) NOT NULL,
  keterangan VARCHAR(30),
  LAST_UPDATE DATETIME,
  USER_ID VARCHAR(20),
PRIMARY KEY (kode_pemilikan)
);

/* Creating table for class NasabahDPLK */

CREATE TABLE NASABAHDPLK(
  no_peserta VARCHAR(11) NOT NULL,
  kode_jenis_usaha VARCHAR(5),
  kode_propinsi VARCHAR(8),
  kode_pemilikan VARCHAR(2),
  nama_lengkap VARCHAR(30),
  tgl_registrasi DATETIME,
  tempat_lahir VARCHAR(30),
  tanggal_lahir DATETIME,
  alamat_jalan VARCHAR(60),
  alamat_rtrw VARCHAR(7),
  alamat_kelurahan VARCHAR(50),
  ALAMAT_KECAMATAN VARCHAR(50),
  alamat_kota VARCHAR(15),
  alamat_kode_pos VARCHAR(6),
  alamat_telepon VARCHAR(12),
  pekerjaan VARCHAR(30),
  nama_perusahaan VARCHAR(30),
  alamat_kantor_jalan VARCHAR(30),
  alamat_kantor_kode_pos VARCHAR(30),
  ALAMAT_KANTOR_KELURAHAN VARCHAR(50),
  ALAMAT_KANTOR_KECAMATAN VARCHAR(50),
  alamat_kantor_kota VARCHAR(30),
  alamat_kantor_propinsi VARCHAR(30),
  alamat_kantor_telepon VARCHAR(30),
  dplklain VARCHAR(12),
  ALAMAT_SURAT_JALAN VARCHAR(60),
  ALAMAT_SURAT_KELURAHAN VARCHAR(50),
  ALAMAT_SURAT_KECAMATAN VARCHAR(50),
  ALAMAT_SURAT_RTRW VARCHAR(7),
  ALAMAT_SURAT_KOTA VARCHAR(30),
  ALAMAT_SURAT_PROPINSI VARCHAR(30),
  ALAMAT_SURAT_KODE_POS VARCHAR(5),
  NPWP VARCHAR(20),
  LAST_UPDATE DATETIME,
  USER_ID VARCHAR(20),
  AUTH_USER_ID VARCHAR(20),
  ISCOMMITTED VARCHAR(1),
  LAST_TERMINAL_ID VARCHAR(15),
  NO_REFERENSI VARCHAR(20),
  TERMINAL_ID VARCHAR(15),
  KETERANGAN VARCHAR(100),
  JENIS_KELAMIN VARCHAR(1),
  KODE_NASABAH_CORPORATE VARCHAR(11),
  OPERATION_CODE VARCHAR(1),
  KODE_KELOMPOK VARCHAR(20),
PRIMARY KEY (no_peserta)
);

/* Creating table for class NasabahDPLKCorporate */

CREATE TABLE NASABAHDPLKCORPORATE(
  KODE_NASABAH_CORPORATE VARCHAR(11) NOT NULL,
  NAMA_PERUSAHAAN VARCHAR(50),
  alamat_kantor_jalan VARCHAR(30),
  alamat_kantor_kode_pos VARCHAR(30),
  ALAMAT_KANTOR_KELURAHAN VARCHAR(50),
  ALAMAT_KANTOR_KECAMATAN VARCHAR(50),
  alamat_kantor_kota VARCHAR(30),
  NPWP VARCHAR(20),
  LAST_UPDATE DATETIME,
  USER_ID VARCHAR(20),
  AUTH_USER_ID VARCHAR(20),
  ISCOMMITTED VARCHAR(1),
  NO_PERJANJIAN VARCHAR(20),
  TGL_BAYAR_IURAN INTEGER,
  LAST_TERMINAL_ID VARCHAR(15),
  NO_REFERENSI VARCHAR(20),
  TERMINAL_ID VARCHAR(15),
  ALAMAT_KANTOR_TELEPON VARCHAR(30),
  KETERANGAN VARCHAR(100),
  KODE_JENIS_USAHA VARCHAR(5),
  KODE_PEMILIKAN VARCHAR(2),
  OPERATION_CODE VARCHAR(1),
PRIMARY KEY (KODE_NASABAH_CORPORATE)
);

/* Creating table for class OperationCode */

CREATE TABLE OPERATIONCODE(
  OPERATION_CODE VARCHAR(1) NOT NULL,
  KETERANGAN VARCHAR(100),
  USER_ID VARCHAR(20),
  LAST_UPDATE DATETIME,
  OPERATION_NAME VARCHAR(20),
PRIMARY KEY (OPERATION_CODE)
);

/* Creating table for class PaketInvestasi */

CREATE TABLE PAKETINVESTASI(
  kode_paket_investasi VARCHAR(2) NOT NULL,
  nama_paket_investasi VARCHAR(30),
  total_potensi_profit DOUBLE PRECISION,
  total_srr DOUBLE PRECISION,
  no_giro VARCHAR(30),
  acc_giro VARCHAR(20),
  acc_iuran VARCHAR(20),
  acc_peralihan VARCHAR(20),
  acc_pengembangan VARCHAR(20),
  acc_kedplklain VARCHAR(20),
  acc_manfaat VARCHAR(20),
  USER_ID VARCHAR(20),
  LAST_UPDATE DATETIME,
PRIMARY KEY (kode_paket_investasi)
);

/* Creating table for class Parameter */

CREATE TABLE PARAMETER(
  KEY_PARAMETER VARCHAR(30) NOT NULL,
  NUMERIC_VALUE DOUBLE PRECISION,
  VARCHAR_VALUE VARCHAR,
  DESCRIPTION VARCHAR(50),
PRIMARY KEY (KEY_PARAMETER)
);

/* Creating table for class PembagianHasilPortofolio */

CREATE TABLE TRANSAKSIDPLK(
  ID_Transaksi INTEGER NOT NULL,
  catatan VARCHAR(40),
  idbghasil INTEGER,
PRIMARY KEY (ID_Transaksi)
);

/* Creating table for class PenarikanDana */

CREATE TABLE PENARIKANDANA(
  ID_Transaksi INTEGER NOT NULL,
  jml_tarik DOUBLE PRECISION,
  penarikan_phk VARCHAR(1),
  dana_diterima DOUBLE PRECISION,
  ktr_biaya_lain VARCHAR(30),
  user_name VARCHAR(32),
  count_advis INTEGER,
  SALDO_IURAN_AWAL DOUBLE PRECISION,
  SALDO_IURAN_AKHIR DOUBLE PRECISION,
  BIAYA_TARIK DOUBLE PRECISION,
  BIAYA_LAIN DOUBLE PRECISION,
  JENIS_BIAYA VARCHAR(1),
  PAJAK DOUBLE PRECISION,
  ID_TRANSAKSI_BADMTRANS INTEGER,
PRIMARY KEY (ID_Transaksi)
);

/* Creating table for class PenarikanDanaNormal */

CREATE TABLE PENARIKANDANA(
  ID_TRANSAKSI INTEGER NOT NULL,
PRIMARY KEY (ID_TRANSAKSI)
);

/* Creating table for class PenarikanDanaPHK */

CREATE TABLE PENARIKANDANA(
  ID_TRANSAKSI INTEGER NOT NULL,
PRIMARY KEY (ID_TRANSAKSI)
);

/* Creating table for class Pendaftaran */

CREATE TABLE PENDAFTARAN(
  ID_Transaksi INTEGER NOT NULL,
  catatan_pendaftaran VARCHAR(30),
  biaya_daftar DOUBLE PRECISION,
PRIMARY KEY (ID_Transaksi)
);

/* Creating table for class PengalihanDariDPLKLain */

CREATE TABLE PENGALIHANDARIDPLKLAIN(
  ID_Transaksi INTEGER NOT NULL,
  nama_dplk VARCHAR(30),
  alamat VARCHAR(50),
  no_dplk_lain VARCHAR(20),
  SALDO_IURAN_PK DOUBLE PRECISION,
  SALDO_IURAN_PST DOUBLE PRECISION,
  SALDO_PENGEMBANGAN DOUBLE PRECISION,
  SALDO_PERALIHAN DOUBLE PRECISION,
PRIMARY KEY (ID_Transaksi)
);

/* Creating table for class PengalihanKeDPLKLain */

CREATE TABLE PENGALIHANKEDPLKLAIN(
  ID_Transaksi INTEGER NOT NULL,
  dana_dialihkan DOUBLE PRECISION,
  ktr_biaya_lain VARCHAR(30),
  ID_TRANSAKSI_BADMTHN INTEGER,
  ID_TRANSAKSI_BPENG INTEGER,
  BIAYA_PINDAH DOUBLE PRECISION,
  SALDO_DANA_DIPINDAHKAN DOUBLE PRECISION,
  BIAYA_LAIN DOUBLE PRECISION,
  NAMA_DPLK VARCHAR(50),
  ALAMAT VARCHAR(100),
  SALDO_IURAN_PK DOUBLE PRECISION,
  SALDO_IURAN_PST DOUBLE PRECISION,
  SALDO_PENGEMBANGAN DOUBLE PRECISION,
  SALDO_PERALIHAN DOUBLE PRECISION,
  SALDO_JML_DANA DOUBLE PRECISION,
  JENIS_BIAYA VARCHAR(1),
  BIAYA_PENGELOLAAN DOUBLE PRECISION,
  BIAYA_ADMINISTRASI DOUBLE PRECISION,
  ID_TRANSAKSI_BADMTRANS INTEGER,
  COUNT_ADVIS INTEGER,
PRIMARY KEY (ID_Transaksi)
);

/* Creating table for class PengambilanManfaat */

CREATE TABLE PENGAMBILANMANFAAT(
  ID_Transaksi INTEGER NOT NULL,
  kode_jns_manfaat VARCHAR(1),
  saldo_peralihan DOUBLE PRECISION,
  saldo_pengembangan DOUBLE PRECISION,
  saldo_jml_dana DOUBLE PRECISION,
  manfaat_stlh_pajak DOUBLE PRECISION,
  mutasi_biaya_lain DOUBLE PRECISION,
  count_advis INTEGER,
  ID_TRANSAKSI_BADMTHN INTEGER,
  ID_TRANSAKSI_BPENG INTEGER,
  SALDO_MANFAAT DOUBLE PRECISION,
  SALDO_IURAN_PK DOUBLE PRECISION,
  SALDO_IURAN_PST DOUBLE PRECISION,
  PAJAK DOUBLE PRECISION,
  BIAYA_PENCAIRAN DOUBLE PRECISION,
  MANFAAT_TUNAI DOUBLE PRECISION,
  MANFAAT_ANUITAS DOUBLE PRECISION,
  BIAYA_LAIN DOUBLE PRECISION,
  MANFAAT_TUNAI_DITERIMA DOUBLE PRECISION,
  NAMA_ANUITAS VARCHAR(50),
  JENIS_BIAYA VARCHAR(1),
  BIAYA_PENGELOLAAN DOUBLE PRECISION,
  BIAYA_ADMINISTRASI DOUBLE PRECISION,
  ID_TRANSAKSI_BADMTRANS INTEGER,
  AHLIWARIS_ID INTEGER,
PRIMARY KEY (ID_Transaksi)
);

/* Creating table for class PihakKetiga */

CREATE TABLE PIHAKKETIGA(
  kode_pihak_ketiga VARCHAR(8) NOT NULL,
  nama_pihak_ketiga VARCHAR(30),
  ALAMAT_PIHAK_KETIGA VARCHAR(50),
  SELF_INVESTMENT VARCHAR(1),
  USER_ID VARCHAR(20),
  LAST_UPDATE DATETIME,
PRIMARY KEY (kode_pihak_ketiga)
);

/* Creating table for class RefHubKeluarga */

CREATE TABLE REFHUBKELUARGA(
  kode_hub_keluarga VARCHAR(1) NOT NULL,
  nama_hub_keluarga VARCHAR(30),
  LAST_UPDATE DATETIME,
  USER_ID VARCHAR(20),
PRIMARY KEY (kode_hub_keluarga)
);

/* Creating table for class RegEditNasabahDPLKCorporate */

CREATE TABLE REGEDITNASABAHDPLKCORPORATE(
  REGEDITNDPLKCORP_ID INTEGER NOT NULL,
  TANGGAL_REGISTER DATETIME,
  USER_ID VARCHAR(20),
  TERMINAL_ID VARCHAR(15),
  NO_REFERENSI VARCHAR(20),
  KETERANGAN VARCHAR(100),
  TGL_BAYAR_IURAN INTEGER,
  NPWP VARCHAR(20),
  NO_PERJANJIAN VARCHAR(20),
  NAMA_PERUSAHAAN VARCHAR(50),
  alamat_kantor_jalan VARCHAR(30),
  alamat_kantor_kode_pos VARCHAR(30),
  ALAMAT_KANTOR_KELURAHAN VARCHAR(50),
  ALAMAT_KANTOR_KECAMATAN VARCHAR(50),
  alamat_kantor_kota VARCHAR(30),
  alamat_kantor_telepon VARCHAR(30),
  KODE_PEMILIKAN VARCHAR(2),
  KODE_JENIS_USAHA VARCHAR(5),
  KODE_NASABAH_CORPORATE VARCHAR(11),
  OPERATION_CODE VARCHAR(1),
PRIMARY KEY (REGEDITNDPLKCORP_ID)
);

/* Creating table for class RegEditNasabahRekening */

CREATE TABLE REGEDITNASABAHREKENING(
  nama_lengkap VARCHAR(30),
  tempat_lahir VARCHAR(30),
  tanggal_lahir DATETIME,
  pekerjaan VARCHAR(30),
  nama_perusahaan VARCHAR(30),
  SUMBER_DANA VARCHAR(40),
  USIA_PENSIUN INTEGER,
  KETERANGAN_NASABAHDPLK VARCHAR(100),
  KETERANGAN_REKENINGDPLK VARCHAR(100),
  REGISTERCIF_ID INTEGER NOT NULL,
  JENIS_KELAMIN VARCHAR(1),
  KODE_JENIS_USAHA VARCHAR(5),
  KODE_PEMILIKAN VARCHAR(2),
  KODE_PROPINSI VARCHAR(8),
  KODE_KELOMPOK VARCHAR(20),
PRIMARY KEY (REGISTERCIF_ID)
);

/* Creating table for class RegisterAhliWaris */

CREATE TABLE REGISTERAHLIWARIS(
  REGISTERCIF_ID INTEGER NOT NULL,
PRIMARY KEY (REGISTERCIF_ID)
);

/* Creating table for class RegisterAhliWarisDetail */

CREATE TABLE REGISTERAHLIWARISDETAIL(
  REGISTERAWD_ID INTEGER NOT NULL,
  NOMOR_URUT_PRIORITAS INTEGER,
  NAMA_LENGKAP VARCHAR(30),
  TANGGAL_LAHIR DATETIME,
  JENIS_KELAMIN VARCHAR(1),
  STATUS_AHLI_WARIS VARCHAR(1),
  KETERANGAN VARCHAR(100),
  HUBUNGAN_KELUARGA VARCHAR(1),
  REGISTERCIF_ID INTEGER,
PRIMARY KEY (REGISTERAWD_ID)
);

/* Creating table for class RegisterAnuitas */

CREATE TABLE REGISTERANUITAS(
  REGISTERCIF_ID INTEGER NOT NULL,
  NOMINAL_ANUITAS DOUBLE PRECISION,
PRIMARY KEY (REGISTERCIF_ID)
);

/* Creating table for class RegisterAutoDebet */

CREATE TABLE REGISTERAUTODEBET(
  NO_REKENING VARCHAR(20),
  NAMA_REKENING VARCHAR(50),
  TANGGAL_AUTODEBET INTEGER,
  JENIS_TRANSAKSI VARCHAR(1),
  REGISTERCIF_ID INTEGER NOT NULL,
PRIMARY KEY (REGISTERCIF_ID)
);

/* Creating table for class RegisterCIF */

CREATE TABLE REGISTERCIF(
  REGISTERCIF_ID INTEGER NOT NULL,
  TERMINAL_ID VARCHAR(15),
  USER_ID VARCHAR(20),
  TANGGAL_REGISTER DATETIME,
  KETERANGAN VARCHAR(100),
  NO_REFERENSI VARCHAR(20),
  KODE_JENIS_REGISTERCIF VARCHAR(1),
  NO_PESERTA VARCHAR(11),
PRIMARY KEY (REGISTERCIF_ID)
);

/* Creating table for class RegisterInvestasi */

CREATE TABLE REGISTERINVESTASI(
  ID_REGISTERINVESTASI INTEGER NOT NULL,
  NO_BILYET VARCHAR(15),
  TGL_BUKA DATETIME,
  USER_ID VARCHAR(20),
  TERMINAL_ID VARCHAR(15),
  TANGGAL_REGISTER DATETIME,
  NOMINAL DOUBLE PRECISION,
  KODE_PIHAK_KETIGA VARCHAR(8),
  KODE_PAKET_INVESTASI VARCHAR(2),
  KODE_JNS_INVESTASI VARCHAR(3),
  ID_TRANSACTIONBATCH INTEGER,
PRIMARY KEY (ID_REGISTERINVESTASI)
);

/* Creating table for class RegisterIuran */

CREATE TABLE REGISTERIURAN(
  IURAN_PST DOUBLE PRECISION,
  IURAN_PK DOUBLE PRECISION,
  REGISTERCIF_ID INTEGER NOT NULL,
  NO_PESERTA VARCHAR(11),
PRIMARY KEY (REGISTERCIF_ID)
);

/* Creating table for class RegisterNasabahRekening */

CREATE TABLE REGISTERNASABAHREKENING(
  REGISTERNR_ID INTEGER NOT NULL,
  USER_ID VARCHAR(20),
  TANGGAL_REGISTER DATETIME,
  no_peserta VARCHAR(11) NOT NULL,
  nama_lengkap VARCHAR(30),
  tempat_lahir VARCHAR(30),
  tanggal_lahir DATETIME,
  alamat_jalan VARCHAR(60),
  alamat_rtrw VARCHAR(7),
  alamat_kelurahan VARCHAR(50),
  ALAMAT_KECAMATAN VARCHAR(50),
  alamat_kota VARCHAR(15),
  alamat_kode_pos VARCHAR(6),
  alamat_telepon VARCHAR(12),
  pekerjaan VARCHAR(30),
  nama_perusahaan VARCHAR(30),
  alamat_kantor_jalan VARCHAR(30),
  alamat_kantor_kode_pos VARCHAR(30),
  ALAMAT_KANTOR_KELURAHAN VARCHAR(50),
  ALAMAT_KANTOR_KECAMATAN VARCHAR(50),
  alamat_kantor_kota VARCHAR(30),
  alamat_kantor_propinsi VARCHAR(30),
  alamat_kantor_telepon VARCHAR(30),
  dplklain VARCHAR(12),
  ALAMAT_SURAT_JALAN VARCHAR(60),
  ALAMAT_SURAT_KELURAHAN VARCHAR(50),
  ALAMAT_SURAT_KECAMATAN VARCHAR(50),
  ALAMAT_SURAT_RTRW VARCHAR(7),
  ALAMAT_SURAT_KOTA VARCHAR(30),
  ALAMAT_SURAT_PROPINSI VARCHAR(30),
  ALAMAT_SURAT_KODE_POS VARCHAR(5),
  NPWP VARCHAR(20),
  kode_cab_daftar VARCHAR(5),
  WASIAT_UMMAT VARCHAR(1),
  STATUS_BIAYA_DAFTAR VARCHAR(1),
  KIRIM_STATEMEN VARCHAR(1),
  sumber_dana VARCHAR(40),
  IURAN_PST DOUBLE PRECISION,
  IURAN_PK DOUBLE PRECISION,
  BESAR_BIAYA_DAFTAR DOUBLE PRECISION,
  AUTO_DEBET VARCHAR(1),
  NO_REK_AUTODEBET VARCHAR(12),
  NAMA_REK_AUTODEBET VARCHAR(30),
  BAYAR_DAFTAR_USER_ID VARCHAR(20),
  TGL_BAYAR_DAFTAR DATETIME,
  BAYAR_DAFTAR_TERMINAL_ID VARCHAR(15),
  NO_REFERENSI VARCHAR(20),
  KETERANGAN VARCHAR(100),
  TERMINAL_ID VARCHAR(15),
  USIA_PENSIUN INTEGER,
  TANGGAL_AUTODEBET INTEGER,
  JENIS_KELAMIN VARCHAR(1),
  ISREGISTEREDBYADMIN VARCHAR(1),
  KODE_PROPINSI VARCHAR(8),
  KODE_PEMILIKAN VARCHAR(2),
  KODE_JENIS_USAHA VARCHAR(5),
  KODE_NASABAH_CORPORATE VARCHAR(11),
  KODE_PAKET_INVESTASI VARCHAR(2),
  KODE_KELOMPOK VARCHAR(20),
PRIMARY KEY (REGISTERNR_ID)
);

/* Creating table for class RegisterPindahPaketInvestasi */

CREATE TABLE REGISTERPINDAHPAKETINVESTASI(
  REGISTERCIF_ID INTEGER NOT NULL,
  KODE_PAKET_INVESTASI VARCHAR(2),
  ID_TRANSACTIONBATCH INTEGER,
PRIMARY KEY (REGISTERCIF_ID)
);

/* Creating table for class RegisterUbahAlamat */

CREATE TABLE REGISTERUBAHALAMAT(
  alamat_jalan VARCHAR(60),
  alamat_rtrw VARCHAR(7),
  alamat_kelurahan VARCHAR(50),
  ALAMAT_KECAMATAN VARCHAR(50),
  alamat_kota VARCHAR(15),
  alamat_kode_pos VARCHAR(6),
  alamat_telepon VARCHAR(12),
  alamat_kantor_jalan VARCHAR(30),
  alamat_kantor_kode_pos VARCHAR(30),
  ALAMAT_KANTOR_KELURAHAN VARCHAR(50),
  ALAMAT_KANTOR_KECAMATAN VARCHAR(50),
  alamat_kantor_kota VARCHAR(30),
  alamat_kantor_propinsi VARCHAR(30),
  alamat_kantor_telepon VARCHAR(30),
  ALAMAT_SURAT_JALAN VARCHAR(60),
  ALAMAT_SURAT_KELURAHAN VARCHAR(50),
  ALAMAT_SURAT_KECAMATAN VARCHAR(50),
  ALAMAT_SURAT_RTRW VARCHAR(7),
  ALAMAT_SURAT_KOTA VARCHAR(30),
  ALAMAT_SURAT_PROPINSI VARCHAR(30),
  ALAMAT_SURAT_KODE_POS VARCHAR(5),
  KIRIM_STATEMEN VARCHAR(1),
  REGISTERCIF_ID INTEGER NOT NULL,
PRIMARY KEY (REGISTERCIF_ID)
);

/* Creating table for class RegisterUbahStatusKerja */

CREATE TABLE REGISTERUBAHSTATUSKERJA(
  REGISTERCIF_ID INTEGER NOT NULL,
  JENIS_TRANSAKSI VARCHAR(1),
  KODE_NASABAH_CORPORATE VARCHAR(11),
PRIMARY KEY (REGISTERCIF_ID)
);

/* Creating table for class RegisterWasiatUmmat */

CREATE TABLE REGISTERWASIATUMMAT(
  JENIS_TRANSAKSI VARCHAR(1),
  ALASAN_BERHENTI VARCHAR(100),
  REGISTERCIF_ID INTEGER NOT NULL,
PRIMARY KEY (REGISTERCIF_ID)
);

/* Creating table for class RegNRAhliWaris */

CREATE TABLE REGNRAHLIWARIS(
  REGNRAHLIWARIS_ID INTEGER NOT NULL,
  TANGGAL_REGISTER DATETIME,
  NOMOR_URUT_PRIORITAS INTEGER,
  NAMA_LENGKAP VARCHAR(30),
  TANGGAL_LAHIR DATETIME,
  JENIS_KELAMIN VARCHAR(1),
  STATUS_AHLI_WARIS VARCHAR(1),
  KETERANGAN VARCHAR(100),
  NO_REFERENSI VARCHAR(20),
  TERMINAL_ID VARCHAR(15),
  HUBUNGAN_KELUARGA VARCHAR(1),
  REGISTERNR_ID INTEGER,
PRIMARY KEY (REGNRAHLIWARIS_ID)
);

/* Creating table for class RekeningAnuitas */

CREATE TABLE REKENINGANUITAS(
  NO_REKENING VARCHAR(20) NOT NULL,
  TGL_PEMBELIAN_ANUITAS DATETIME,
  NAMA_ASURANSI VARCHAR(20),
  NO_POLIS_ANUITAS VARCHAR(20),
  NOMINAL_ANUITAS DOUBLE PRECISION,
  NO_PESERTA VARCHAR(11),
PRIMARY KEY (NO_REKENING)
);

/* Creating table for class RekeningAutoDebet */

CREATE TABLE REKENINGAUTODEBET(
  NO_REKENING VARCHAR(20) NOT NULL,
  NAMA_REKENING VARCHAR(50),
  TANGGAL_AUTODEBET INTEGER,
  NO_PESERTA VARCHAR(11),
PRIMARY KEY (NO_REKENING)
);

/* Creating table for class RekeningDPLK */

CREATE TABLE REKENINGDPLK(
  no_peserta VARCHAR(11) NOT NULL,
  kode_paket_investasi VARCHAR(2),
  kode_cab_daftar VARCHAR(5),
  usia_pensiun INTEGER,
  AKUM_DANA_IURAN_PST DOUBLE PRECISION,
  akum_dana_peralihan DOUBLE PRECISION,
  AKUM_DANA_PENGEMBANGAN DOUBLE PRECISION,
  STATUS_DPLK VARCHAR(1),
  TGL_TUTUP DATETIME,
  STATUS_BIAYA_DAFTAR VARCHAR(1),
  SRR_AKHIR DOUBLE PRECISION,
  status_komisi VARCHAR(1),
  KIRIM_STATEMEN VARCHAR(1),
  sumber_dana VARCHAR(40),
  tgl_akseptasi DATETIME,
  tgl_pensiun DATETIME,
  tgl_pensiun_dipercepat DATETIME,
  tgl_bayar_anuitas DOUBLE PRECISION,
  nilai_bayar_anuitas DOUBLE PRECISION,
  AKUM_DANA_IURAN_PK DOUBLE PRECISION,
  IURAN_PST DOUBLE PRECISION,
  TGL_SRR_AKHIR DATETIME,
  IURAN_PK DOUBLE PRECISION,
  USER_ID VARCHAR(20),
  AUTH_USER_ID VARCHAR(20),
  LAST_UPDATE DATETIME,
  LAST_TERMINAL_ID VARCHAR(15),
  STATUS_ANUITAS VARCHAR(1),
  STATUS_AUTODEBET VARCHAR(1),
  STATUS_WASIAT_UMMAT VARCHAR(1),
  KETERANGAN VARCHAR(100),
  CONFIDENTIAL_CODE VARCHAR(3),
  OPERATION_CODE VARCHAR(1),
PRIMARY KEY (no_peserta)
);

/* Creating table for class RekeningWasiatUmmat */

CREATE TABLE REKENINGWASIATUMMAT(
  USER_ID VARCHAR(20),
  AUTH_USER_ID VARCHAR(20),
  NO_POLIS VARCHAR(20),
  BESAR_PREMI DOUBLE PRECISION,
  TGL_AKSEPTASI DATETIME,
  TGL_BERAKHIR DATETIME,
  REKENINGWASIATUMMAT_ID INTEGER NOT NULL,
  NO_PESERTA VARCHAR(11),
PRIMARY KEY (REKENINGWASIATUMMAT_ID)
);

/* Creating table for class RincianPaketInvestasi */

CREATE TABLE RINCIANPAKETINVESTASI(
  kode_paket_investasi VARCHAR(2) NOT NULL,
  maks_proporsi DOUBLE PRECISION,
  total_dana_alokasi DOUBLE PRECISION,
  total_hasil_pengembangan DOUBLE PRECISION,
  hasil_pengembangan_dibagikan DOUBLE PRECISION,
  total_potensi_profit DOUBLE PRECISION,
  KODE_JNS_INVESTASI VARCHAR(3) NOT NULL,
PRIMARY KEY (kode_paket_investasi, KODE_JNS_INVESTASI)
);

/* Creating table for class SessionBLOB */

CREATE TABLE SESSIONBLOB(
  ID INTEGER NOT NULL,
  SESSIONID VARCHAR(100),
  SESSIONCONTEXT INTEGER,
  ID1 INTEGER,
PRIMARY KEY (ID)
);

/* Creating table for class SetoranPremi */

CREATE TABLE TRANSAKSIPREMI(
  ID_TRANSAKSI INTEGER NOT NULL,
PRIMARY KEY (ID_TRANSAKSI)
);

/* Creating table for class SRRCalc */

CREATE TABLE SRRCALC(
  ID_SRRCALC INTEGER NOT NULL,
  TGL_MULAI_HITUNG DATETIME,
  TGL_AKHIR_HITUNG DATETIME,
  TOTAL_SRR DOUBLE PRECISION,
  USER_ID_CREATE VARCHAR(20),
  STATUS_BAGIHASIL VARCHAR(1),
  TGL_CREATE DATETIME,
  TOTAL_HARI_SRR INTEGER,
  KODE_PAKET_INVESTASI VARCHAR(2),
PRIMARY KEY (ID_SRRCALC)
);

/* Creating table for class SRRCalcBagiHasil */

CREATE TABLE SRRCALCBAGIHASIL(
  ID_SRRCALCBAGIHASIL INTEGER NOT NULL,
  IDBGHASIL INTEGER,
  ID_SRRCALC INTEGER,
PRIMARY KEY (ID_SRRCALCBAGIHASIL)
);

/* Creating table for class SubJnsTransLRInvestasi */

CREATE TABLE SUBJNSTRANSLRINVESTASI(
  KODE_SUBJNS_LRINVESTASI VARCHAR(20) NOT NULL,
  KATEGORI VARCHAR(1),
  DESKRIPSI VARCHAR(100),
  ACCOUNT_CODE VARCHAR(20),
  USER_ID VARCHAR(20),
  LAST_UPDATE DATETIME,
  KODE_JNS_INVESTASI VARCHAR(3),
PRIMARY KEY (KODE_SUBJNS_LRINVESTASI)
);

/* Creating table for class SumberDana */

CREATE TABLE SUMBERDANA(
  SUMBER_DANA VARCHAR(20) NOT NULL,
  KETERANGAN VARCHAR(100),
  USER_ID VARCHAR(20),
  LAST_UPDATE DATETIME,
PRIMARY KEY (SUMBER_DANA)
);

/* Creating table for class TitipanPremi */

CREATE TABLE TRANSAKSIPREMI(
  ID_TRANSAKSI INTEGER NOT NULL,
  NO_PESERTA VARCHAR(11),
PRIMARY KEY (ID_TRANSAKSI)
);

/* Creating table for class TransactionBatch */

CREATE TABLE TRANSACTIONBATCH(
  ID_TRANSACTIONBATCH INTEGER NOT NULL,
  BATCH_TYPE VARCHAR(1),
  BATCH_SUB_TYPE VARCHAR(1),
  ACCOUNT_LINK_TYPE VARCHAR(1),
  USER_ID_POST VARCHAR(20),
  TERMINAL_ID_CREATE VARCHAR(15),
  TGL_CREATE DATETIME,
  TGL_POST DATETIME,
  TERMINAL_ID_POST VARCHAR(15),
  BATCH_STATUS VARCHAR(1),
  USER_ID_CREATE VARCHAR(20),
  IS_POSTED VARCHAR(1),
  JOURNAL_BLOCK_ID INTEGER,
  BRANCH_CODE VARCHAR(5),
  USER_ID_OWNER VARCHAR(20),
  NO_BATCH VARCHAR(32),
  TGL_USED DATETIME,
  JAM_MULAI_PAKAI DATETIME,
  JAM_AKHIR_PAKAI DATETIME,
PRIMARY KEY (ID_TRANSACTIONBATCH)
);

/* Creating table for class TransaksiBagiHasil */

CREATE TABLE TRANSAKSIBAGIHASIL(
  ID_TRANSAKSI INTEGER NOT NULL,
  IDBGHASIL INTEGER,
PRIMARY KEY (ID_TRANSAKSI)
);

/* Creating table for class TransaksiDPLK */

CREATE TABLE TRANSAKSIDPLK(
  ID_Transaksi INTEGER NOT NULL,
  user_id VARCHAR(20),
  TGL_TRANSAKSI DATETIME,
  TGL_OTORISASI DATETIME,
  TGL_SISTEM DATETIME,
  USER_ID_AUTH VARCHAR(20),
  TERMINAL_ID VARCHAR(15),
  TERMINAL_ID_AUTH VARCHAR(15),
  KETERANGAN VARCHAR(100),
  MUTASI_IURAN_PK DOUBLE PRECISION,
  MUTASI_IURAN_PST DOUBLE PRECISION,
  MUTASI_PENGEMBANGAN DOUBLE PRECISION,
  MUTASI_PERALIHAN DOUBLE PRECISION,
  ISCOMMITTED VARCHAR(1),
  BRANCH_CODE VARCHAR(5),
  KODE_JENIS_TRANSAKSI VARCHAR(1),
  NO_PESERTA VARCHAR(11),
  KODE_PAKET_INVESTASI VARCHAR(2),
  ID_TRANSACTIONBATCH INTEGER,
PRIMARY KEY (ID_Transaksi)
);

/* Creating table for class TransaksiDPLKManual */

CREATE TABLE TRANSAKSIDPLK(
  ID_TRANSAKSI INTEGER NOT NULL,
PRIMARY KEY (ID_TRANSAKSI)
);

/* Creating table for class TransaksiInvestasi */

CREATE TABLE TRANSAKSIINVESTASI(
  ID_TRANSAKSIINVESTASI INTEGER NOT NULL,
  TGL_TRANSAKSI DATETIME,
  MUTASI_DEBET DOUBLE PRECISION,
  MUTASI_KREDIT DOUBLE PRECISION,
  USER_ID VARCHAR(20),
  USER_ID_AUTH VARCHAR(20),
  TERMINAL_ID VARCHAR(15),
  TERMINAL_ID_AUTH VARCHAR(15),
  TGL_OTORISASI DATETIME,
  TGL_SISTEM DATETIME,
  ISCOMMITTED VARCHAR(1),
  KODE_JENIS_TRINVESTASI VARCHAR(20),
  CLSFTRANSAKSIINVESTASI VARCHAR(1),
  NO_BILYET VARCHAR(15),
  ID_TRANSACTIONBATCH INTEGER,
PRIMARY KEY (ID_TRANSAKSIINVESTASI)
);

/* Creating table for class TransaksiPremi */

CREATE TABLE TRANSAKSIPREMI(
  MUTASI_PREMI DOUBLE PRECISION,
  ID_TRANSAKSI INTEGER NOT NULL,
  USER_ID VARCHAR(20),
  USER_ID_AUTH VARCHAR(20),
  TERMINAL_ID VARCHAR(15),
  TERMINAL_ID_AUTH VARCHAR(15),
  TGL_TRANSAKSI DATETIME,
  TGL_OTORISASI DATETIME,
  TGL_SISTEM DATETIME,
  JENIS_TRANSAKSI VARCHAR(1),
  KETERANGAN VARCHAR(100),
  ISCOMMITTED VARCHAR(1),
  BRANCH_CODE VARCHAR(5),
  ISDEBET VARCHAR(1),
  ID_TRANSACTIONBATCH INTEGER,
PRIMARY KEY (ID_TRANSAKSI)
);

/* Creating table for class TransaksiPremiManual */

CREATE TABLE TRANSAKSIPREMI(
  ID_TRANSAKSI INTEGER NOT NULL,
PRIMARY KEY (ID_TRANSAKSI)
);

/* Creating table for class TransLRInvestasi */

CREATE TABLE TRANSLRINVESTASI(
  ID_TRANSAKSIINVESTASI INTEGER NOT NULL,
  ID_INVESTASI INTEGER,
  KODE_SUBJNS_LRINVESTASI VARCHAR(20),
PRIMARY KEY (ID_TRANSAKSIINVESTASI)
);

/* Creating table for class TransPiutangInvestasi */

CREATE TABLE TRANSPIUTANGINVESTASI(
  ID_TRANSAKSIINVESTASI INTEGER NOT NULL,
  ID_INVESTASI INTEGER,
PRIMARY KEY (ID_TRANSAKSIINVESTASI)
);

/* Creating table for class TransPiutangLRInvestasi */

CREATE TABLE TRANSPIUTANGLRINVESTASI(
  ID_TRANSAKSIINVESTASI INTEGER NOT NULL,
  ID_TRANSAKSIINVESTASI_PIUTINV INTEGER,
  ID_TRANSAKSIINVESTASI_LRINV INTEGER,
  ID_INVESTASI INTEGER,
PRIMARY KEY (ID_TRANSAKSIINVESTASI)
);

/* Creating table for class UserApp */

CREATE TABLE USERAPP(
  user_id VARCHAR(20) NOT NULL,
  UserName VARCHAR(30),
  Description VARCHAR(50),
  NoLimitLocation VARCHAR(1),
  login_count INTEGER,
  mod_user_id VARCHAR(20),
  last_update DATETIME,
  branch_code VARCHAR(5),
  TERMINAL_ID VARCHAR(15),
  CONFIDENTIAL_CODE VARCHAR(3),
  USER_TIMEZONE INTEGER,
  USER_ID1 VARCHAR(20),
PRIMARY KEY (user_id)
);

/* Creating table for class UserGroup */

CREATE TABLE USERGROUP(
  group_id VARCHAR(8) NOT NULL,
  GroupName VARCHAR(30),
  Description VARCHAR(50),
  user_id VARCHAR(20),
  last_update DATETIME,
PRIMARY KEY (group_id)
);

/* Creating table for class UserGroupApp */

CREATE TABLE USERGROUPAPP(
  user_id VARCHAR(20) NOT NULL,
  group_id VARCHAR(8) NOT NULL,
PRIMARY KEY (user_id, group_id)
);

/* Generating enumeration eJenisTransGiroPI */

DELETE FROM Enum_Varchar WHERE Enum_Name = 'eJenisTransGiroPI';

INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisTransGiroPI', 'D', 'manual debet');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisTransGiroPI', 'K', 'manual kredit');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisTransGiroPI', 'P', 'profit');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisTransGiroPI', 'B', 'biaya');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisTransGiroPI', 'T', 'modul transaksi');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisTransGiroPI', 'F', 'modul portofolio');

/* Generating enumeration FTBoolean */

DELETE FROM Enum_Varchar WHERE Enum_Name = 'FTBoolean';

INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('FTBoolean', 'F', 'false');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('FTBoolean', 'T', 'true');

/* Generating enumeration NYBoolean */

DELETE FROM Enum_Varchar WHERE Enum_Name = 'NYBoolean';

INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('NYBoolean', 'F', 'no');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('NYBoolean', 'T', 'yes');

/* Generating enumeration eJournalKind */

DELETE FROM Enum_Int WHERE Enum_Name = 'eJournalKind';

INSERT INTO Enum_Int (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJournalKind', 10, 'Kas');
INSERT INTO Enum_Int (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJournalKind', 11, 'Umum');
INSERT INTO Enum_Int (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJournalKind', 12, 'Awal');
INSERT INTO Enum_Int (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJournalKind', 13, 'Tutup Buku');

/* Generating enumeration eAccountState */

DELETE FROM Enum_Int WHERE Enum_Name = 'eAccountState';

INSERT INTO Enum_Int (Enum_Name, Enum_Value, Enum_Description) VALUES ('eAccountState', 10, 'InActive');
INSERT INTO Enum_Int (Enum_Name, Enum_Value, Enum_Description) VALUES ('eAccountState', 11, 'Active');
INSERT INTO Enum_Int (Enum_Name, Enum_Value, Enum_Description) VALUES ('eAccountState', 12, 'Dead');

/* Generating enumeration eStatus */

DELETE FROM Enum_Int WHERE Enum_Name = 'eStatus';

INSERT INTO Enum_Int (Enum_Name, Enum_Value, Enum_Description) VALUES ('eStatus', 1, 'No Journal');
INSERT INTO Enum_Int (Enum_Name, Enum_Value, Enum_Description) VALUES ('eStatus', 2, 'Journalized');
INSERT INTO Enum_Int (Enum_Name, Enum_Value, Enum_Description) VALUES ('eStatus', 3, 'Closed');

/* Generating enumeration eTimeGroup */

DELETE FROM Enum_Int WHERE Enum_Name = 'eTimeGroup';

INSERT INTO Enum_Int (Enum_Name, Enum_Value, Enum_Description) VALUES ('eTimeGroup', 11, 'daily');
INSERT INTO Enum_Int (Enum_Name, Enum_Value, Enum_Description) VALUES ('eTimeGroup', 12, 'weekly');
INSERT INTO Enum_Int (Enum_Name, Enum_Value, Enum_Description) VALUES ('eTimeGroup', 13, 'two weekly');
INSERT INTO Enum_Int (Enum_Name, Enum_Value, Enum_Description) VALUES ('eTimeGroup', 14, 'monthly');

/* Generating enumeration ePeriodState */

DELETE FROM Enum_Int WHERE Enum_Name = 'ePeriodState';

INSERT INTO Enum_Int (Enum_Name, Enum_Value, Enum_Description) VALUES ('ePeriodState', 10, 'Lower');
INSERT INTO Enum_Int (Enum_Name, Enum_Value, Enum_Description) VALUES ('ePeriodState', 15, 'Current');
INSERT INTO Enum_Int (Enum_Name, Enum_Value, Enum_Description) VALUES ('ePeriodState', 20, 'Upper');

/* Generating enumeration eGroupingMode */

DELETE FROM Enum_Int WHERE Enum_Name = 'eGroupingMode';

INSERT INTO Enum_Int (Enum_Name, Enum_Value, Enum_Description) VALUES ('eGroupingMode', 1, 'One');
INSERT INTO Enum_Int (Enum_Name, Enum_Value, Enum_Description) VALUES ('eGroupingMode', 2, 'Two');
INSERT INTO Enum_Int (Enum_Name, Enum_Value, Enum_Description) VALUES ('eGroupingMode', 3, 'Three');
INSERT INTO Enum_Int (Enum_Name, Enum_Value, Enum_Description) VALUES ('eGroupingMode', 4, 'Four');

/* Generating enumeration eGLTransferMode */

DELETE FROM Enum_Varchar WHERE Enum_Name = 'eGLTransferMode';

INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eGLTransferMode', 'D', 'detail');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eGLTransferMode', 'C', 'compress');

/* Generating enumeration eJenisTransaksiDPLK */

DELETE FROM Enum_Varchar WHERE Enum_Name = 'eJenisTransaksiDPLK';

INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisTransaksiDPLK', 'A', 'Pendaftaran');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisTransaksiDPLK', 'B', 'Pembayaran Premi');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisTransaksiDPLK', 'C', 'Biaya Pengelolaan Dana');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisTransaksiDPLK', 'D', 'Biaya Administrasi Tahunan');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisTransaksiDPLK', 'E', 'Penarikan Dana');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisTransaksiDPLK', 'F', 'Pengubahan Jenis Investasi');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisTransaksiDPLK', 'G', 'Bagi Hasil');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisTransaksiDPLK', 'H', 'Pengalihan ke DPLK Lain');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisTransaksiDPLK', 'I', 'Pengalihan dari DPLK Lain');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisTransaksiDPLK', 'J', 'Pengambilan Manfaat');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisTransaksiDPLK', 'K', 'Iuran Peserta');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisTransaksiDPLK', 'X', 'Biaya Transaksi');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisTransaksiDPLK', 'Z', 'Pajak');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisTransaksiDPLK', 'M', 'Transaksi DPLK Manual');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisTransaksiDPLK', 'V', 'Penarikan Dana 30%');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisTransaksiDPLK', 'W', 'Penarikan Dana PHK');

/* Generating enumeration eCaraBayarIuranDPLK */

DELETE FROM Enum_Varchar WHERE Enum_Name = 'eCaraBayarIuranDPLK';

INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eCaraBayarIuranDPLK', 'T', 'Transfer');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eCaraBayarIuranDPLK', 'C', 'Cash');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eCaraBayarIuranDPLK', 'K', 'Kliring');

/* Generating enumeration eJenisTransaksiInvestasi */

DELETE FROM Enum_Varchar WHERE Enum_Name = 'eJenisTransaksiInvestasi';

INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisTransaksiInvestasi', 'A', 'Alokasi');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisTransaksiInvestasi', 'B', 'Profit');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisTransaksiInvestasi', 'C', 'Tutup');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisTransaksiInvestasi', 'D', 'Biaya');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisTransaksiInvestasi', 'E', 'Potensi');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisTransaksiInvestasi', 'F', 'Kapitalisir');

/* Generating enumeration eHubunganKeluarga */

DELETE FROM Enum_Varchar WHERE Enum_Name = 'eHubunganKeluarga';

INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eHubunganKeluarga', '0', 'Peserta');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eHubunganKeluarga', '1', 'Ayah');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eHubunganKeluarga', '2', 'Ibu');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eHubunganKeluarga', '3', 'Anak');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eHubunganKeluarga', '4', 'Kakak');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eHubunganKeluarga', '5', 'Adik');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eHubunganKeluarga', '6', 'Istri');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eHubunganKeluarga', '7', 'Suami');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eHubunganKeluarga', '8', 'Lain-lain');

/* Generating enumeration eReferensiJenisSalesForce */

DELETE FROM Enum_Varchar WHERE Enum_Name = 'eReferensiJenisSalesForce';

INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eReferensiJenisSalesForce', 'A', 'Internal');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eReferensiJenisSalesForce', 'B', 'Eksternal');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eReferensiJenisSalesForce', 'C', 'Kolektor');

/* Generating enumeration eReferensiTransaksiSalesForce */

DELETE FROM Enum_Varchar WHERE Enum_Name = 'eReferensiTransaksiSalesForce';

INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eReferensiTransaksiSalesForce', 'K', 'Beri Komisi');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eReferensiTransaksiSalesForce', 'B', 'Bayar Komisi');

/* Generating enumeration eStatusRekeningDPLK */

DELETE FROM Enum_Varchar WHERE Enum_Name = 'eStatusRekeningDPLK';

INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eStatusRekeningDPLK', 'A', 'Aktif');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eStatusRekeningDPLK', 'N', 'Inaktif');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eStatusRekeningDPLK', 'S', 'Suspend');

/* Generating enumeration eJenisSalesForce */

DELETE FROM Enum_Varchar WHERE Enum_Name = 'eJenisSalesForce';

INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisSalesForce', '1', 'Internal');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisSalesForce', '2', 'Channeling');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisSalesForce', '3', 'Collecting');

/* Generating enumeration eJenisMarketingFee */

DELETE FROM Enum_Varchar WHERE Enum_Name = 'eJenisMarketingFee';

INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisMarketingFee', 'A', 'Recruiting');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisMarketingFee', 'B', 'Channeling');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisMarketingFee', 'C', 'Collecting');

/* Generating enumeration eJenisInvestasi */

DELETE FROM Enum_Varchar WHERE Enum_Name = 'eJenisInvestasi';

INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisInvestasi', 'A', 'Tetap');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisInvestasi', 'B', 'Tidak Tetap');

/* Generating enumeration eJenisKelamin */

DELETE FROM Enum_Varchar WHERE Enum_Name = 'eJenisKelamin';

INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisKelamin', 'P', 'Pria');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisKelamin', 'W', 'Wanita');

/* Generating enumeration eSumberVoucher */

DELETE FROM Enum_Varchar WHERE Enum_Name = 'eSumberVoucher';

INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eSumberVoucher', 'T', 'Transaksi');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eSumberVoucher', 'I', 'Investasi');

/* Generating enumeration eAuthorizationFlag */

DELETE FROM Enum_Varchar WHERE Enum_Name = 'eAuthorizationFlag';

INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eAuthorizationFlag', 'N', 'new');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eAuthorizationFlag', 'U', 'updated');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eAuthorizationFlag', 'D', 'deleted');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eAuthorizationFlag', 'E', 'authorized');

/* Generating enumeration eBranchStatus */

DELETE FROM Enum_Varchar WHERE Enum_Name = 'eBranchStatus';

INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eBranchStatus', 'B', 'Branch');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eBranchStatus', 'S', 'Sub-branch');

/* Generating enumeration eStdOperationType */

DELETE FROM Enum_Varchar WHERE Enum_Name = 'eStdOperationType';

INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eStdOperationType', 'D', 'Delete');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eStdOperationType', 'E', 'Edit');

/* Generating enumeration eKirimStatemen */

DELETE FROM Enum_Varchar WHERE Enum_Name = 'eKirimStatemen';

INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eKirimStatemen', 'N', 'Tidak dikirim');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eKirimStatemen', 'R', 'Rumah');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eKirimStatemen', 'K', 'Kantor');

/* Generating enumeration eStatusAhliWaris */

DELETE FROM Enum_Varchar WHERE Enum_Name = 'eStatusAhliWaris';

INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eStatusAhliWaris', 'A', 'Aktif');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eStatusAhliWaris', 'N', 'Tidak Aktif');

/* Generating enumeration eBatchType */

DELETE FROM Enum_Varchar WHERE Enum_Name = 'eBatchType';

INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eBatchType', 'R', 'Registration');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eBatchType', 'T', 'Transaction');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eBatchType', 'P', 'Premi');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eBatchType', 'I', 'Investment');

/* Generating enumeration eBatchSubType */

DELETE FROM Enum_Varchar WHERE Enum_Name = 'eBatchSubType';

INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eBatchSubType', 'M', 'Manual Input');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eBatchSubType', 'T', 'Teller Transaction');

/* Generating enumeration eAccLinkType */

DELETE FROM Enum_Varchar WHERE Enum_Name = 'eAccLinkType';

INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eAccLinkType', 'S', 'Single');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eAccLinkType', 'C', 'Custom');

/* Generating enumeration eOperationCode */

DELETE FROM Enum_Varchar WHERE Enum_Name = 'eOperationCode';

INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eOperationCode', 'F', 'Free');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eOperationCode', 'E', 'Edit');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eOperationCode', 'N', 'New');

/* Generating enumeration eJenisUbahStatus */

DELETE FROM Enum_Varchar WHERE Enum_Name = 'eJenisUbahStatus';

INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisUbahStatus', 'I', 'Masuk');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisUbahStatus', 'O', 'Keluar');

/* Generating enumeration eDaftarKeluarTrans */

DELETE FROM Enum_Varchar WHERE Enum_Name = 'eDaftarKeluarTrans';

INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eDaftarKeluarTrans', 'R', 'Daftar');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eDaftarKeluarTrans', 'O', 'Keluar');

/* Generating enumeration eJenisTransaksiPremi */

DELETE FROM Enum_Varchar WHERE Enum_Name = 'eJenisTransaksiPremi';

INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisTransaksiPremi', 'T', 'Titipan Premi');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisTransaksiPremi', 'S', 'Setoran Premi');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisTransaksiPremi', 'M', 'Transaksi Premi Manual');

/* Generating enumeration eBatchStatus */

DELETE FROM Enum_Varchar WHERE Enum_Name = 'eBatchStatus';

INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eBatchStatus', 'O', 'Buka');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eBatchStatus', 'C', 'Tutup');

/* Generating enumeration eJenisBiaya */

DELETE FROM Enum_Varchar WHERE Enum_Name = 'eJenisBiaya';

INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisBiaya', 'T', 'Tunai');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisBiaya', 'S', 'SKN');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisBiaya', 'R', 'RTGS');

/* Generating enumeration eJenisRegisterCIF */

DELETE FROM Enum_Varchar WHERE Enum_Name = 'eJenisRegisterCIF';

INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisRegisterCIF', 'A', 'Alamat');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisRegisterCIF', 'W', 'Ahli Waris');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisRegisterCIF', 'K', 'Status Kerja');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisRegisterCIF', 'U', 'Wasiat Ummat');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisRegisterCIF', 'P', 'Paket Investasi');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisRegisterCIF', 'I', 'Iuran');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisRegisterCIF', 'N', 'Anuitas');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisRegisterCIF', 'D', 'Auto Debet');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisRegisterCIF', 'Z', 'Lain-lain');

/* Generating enumeration eKategoriSubJnsTransLRInv */

DELETE FROM Enum_Varchar WHERE Enum_Name = 'eKategoriSubJnsTransLRInv';

INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eKategoriSubJnsTransLRInv', 'R', 'Rugi');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eKategoriSubJnsTransLRInv', 'L', 'Laba');

/* Generating enumeration eJenisPenerimaanManfaat */

DELETE FROM Enum_Varchar WHERE Enum_Name = 'eJenisPenerimaanManfaat';

INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisPenerimaanManfaat', 'B', 'Pensiun Biasa');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisPenerimaanManfaat', 'D', 'Pensiun Dipercepat');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisPenerimaanManfaat', 'C', 'Pensiun Cacat');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJenisPenerimaanManfaat', 'J', 'Pensiun Janda / Anak');

/* Generating enumeration eJnsTransInv */

DELETE FROM Enum_Varchar WHERE Enum_Name = 'eJnsTransInv';

INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJnsTransInv', 'A', 'Investasi Baru/Alokasi Investasi Tambahan');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJnsTransInv', 'C', 'Tutup Investasi');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJnsTransInv', 'B', 'Pembukuan Pendapatan Investasi secara Tunai');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJnsTransInv', 'D', 'Pembukuan Biaya Investasi');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJnsTransInv', 'F', 'Rollover Investasi');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJnsTransInv', 'G', 'Transaksi Investasi Manual');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJnsTransInv', 'H', 'Transaksi Piutang LR Investasi Manual');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJnsTransInv', 'I', 'Transaksi LR Investasi Manual');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eJnsTransInv', 'P', 'Pembukuan Pendapatan Investasi ke Piutang');

/* Generating enumeration eClsfTransaksiInvestasi */

DELETE FROM Enum_Varchar WHERE Enum_Name = 'eClsfTransaksiInvestasi';

INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eClsfTransaksiInvestasi', 'A', 'Piutang Investasi');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eClsfTransaksiInvestasi', 'B', 'Piutang LR Investasi');
INSERT INTO Enum_Varchar (Enum_Name, Enum_Value, Enum_Description) VALUES ('eClsfTransaksiInvestasi', 'C', 'LR Investasi');

